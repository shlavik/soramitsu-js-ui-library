@import "./variables.scss";

[class^="el-"]:not(i):not([class*='el-icon']),
[class*="el-"]:not(i):not([class*='el-icon']) {
  font-family: 'Sora', sans-serif !important;
}

html {
  box-sizing: border-box;
}

*, *:before, *:after {
  box-sizing: border-box;
  margin: 0;
}

.flex {
  display: flex;
}

.bold {
  font-weight: bold;
}

.big {
  height: $size-big;
}

.medium {
  height: $size-medium;
}

.small {
  height: $size-small;
}

button > span {
  position: relative;
}

// TODO: move to separate file and import to storybook
.sbdocs.sbdocs-preview div[id^='story--'] > * {
  height: auto !important;
}

@mixin res($key, $map: $--breakpoints) {
  @if map-has-key($map, $key) {
    @media only screen and #{inspect(map-get($map, $key))} {
      @content;
    }
  } @else {
    @warn "Undefeined points: `#{$map}`";
  }
}

@mixin utils-clearfix {
  $selector: &;
  @at-root {
    #{$selector}::before,
    #{$selector}::after {
      display: table;
      content: "";
    }
    #{$selector}::after {
      clear: both;
    }
  }
}

.el-message-box {
  .el-message-box__header {
    .el-message-box__title {
      color: $color-basic-black;
      font-size: 16px;
    }
  }
  .el-message-box__btns {
    button.el-button.el-button--default.el-button--small {
      height: $size-medium;
      font-size: 14px;
      border-radius: 4px;
      &:hover, &:active, &:focus {
        color: $color-main-brand;
        background-color: $color-basic-white;
        border-color: $color-main-brand;
      }
      &.el-button--primary {
        &:hover, &:active, &:focus {
          color: $color-basic-white;
          background-color: $color-main-hover;
          border-color: $color-main-hover;
        }
      }
    }
  }
}
